// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
        IN in[16], load, address[6];
        OUT out[16];

        PARTS:
        // Split load to 8 RAM8s based on top 3 bits
        DMux8Way(in= load, sel= address[3..5], a= reg0, b= reg1, c= reg2, d= reg3,
                        e= reg4, f= reg5, g= reg6, h= reg7);

        RAM8(in= in, load= reg0, address= address[0..2], out= out0);
        RAM8(in= in, load= reg1, address= address[0..2], out= out1);
        RAM8(in= in, load= reg2, address= address[0..2], out= out2);
        RAM8(in= in, load= reg3, address= address[0..2], out= out3);
        RAM8(in= in, load= reg4, address= address[0..2], out= out4);
        RAM8(in= in, load= reg5, address= address[0..2], out= out5);
        RAM8(in= in, load= reg6, address= address[0..2], out= out6);
        RAM8(in= in, load= reg7, address= address[0..2], out= out7);

        Mux8Way16(a= out0, b= out1, c= out2, d= out3, e= out4,
                        f= out5, g= out6, h= out7, sel= address[3..5], out= out);
}
